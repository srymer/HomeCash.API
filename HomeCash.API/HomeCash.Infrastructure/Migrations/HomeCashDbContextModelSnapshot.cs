// <auto-generated />
using System;
using HomeCash.Infrastructure.EFCore.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeCash.Infrastructure.Migrations
{
    [DbContext(typeof(HomeCashDbContext))]
    partial class HomeCashDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeCash.Domain.Entities.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Cost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnName("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnName("Vid_CreatedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneratedByUserId")
                        .HasColumnName("Vid_GeneratedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeBaseId")
                        .HasColumnName("Vid_HomeBase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShopId")
                        .HasColumnName("Vid_Shop")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Id_Cost");

                    b.HasIndex("HomeBaseId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.HomeBase", b =>
                {
                    b.Property<Guid>("HomeBaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_HomeBase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HomeName")
                        .IsRequired()
                        .HasColumnName("HomeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeBaseId")
                        .HasName("Id_HomeBase");

                    b.ToTable("HomeBases");
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.Income", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Income")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnName("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnName("Vid_CreatedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneratedByUserId")
                        .HasColumnName("Vid_GeneratedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeBaseId")
                        .HasColumnName("Vid_HomeBase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Id_Income");

                    b.HasIndex("HomeBaseId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Shop")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Id_Shop");

                    b.ToTable("Shops","dictionary");
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeBaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnName("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnName("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Id_User");

                    b.HasIndex("HomeBaseId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.Cost", b =>
                {
                    b.HasOne("HomeCash.Domain.Entities.HomeBase", "HomeBase")
                        .WithMany("Costs")
                        .HasForeignKey("HomeBaseId")
                        .HasConstraintName("Fid_HomeBase_FK2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.Income", b =>
                {
                    b.HasOne("HomeCash.Domain.Entities.HomeBase", "HomeBase")
                        .WithMany("Incomes")
                        .HasForeignKey("HomeBaseId")
                        .HasConstraintName("Fid_HomeBase_FK3")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeCash.Domain.Entities.User", b =>
                {
                    b.HasOne("HomeCash.Domain.Entities.HomeBase", "HomeBase")
                        .WithMany("Users")
                        .HasForeignKey("HomeBaseId")
                        .HasConstraintName("Fid_HomeBase_FK1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
